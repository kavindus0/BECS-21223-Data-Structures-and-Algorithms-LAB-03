/* ===== Functions.java ===== */
package Q3;

public class Functions {

    public static int deleteMiddleDigit(int number) {
        if (number == 0) {
            return 0;
        }
        if (number < 0) {
            System.out.println("Error: Input number cannot be negative.");
            return -1;
        }

        String numStr = Integer.toString(number);
        int len = numStr.length();
        int middleIndex = len / 2;

        Queue digitQueue = new Queue(len + 1);

        for (char c : numStr.toCharArray()) {
            digitQueue.append(c);
        }

        StringBuilder resultStr = new StringBuilder();
        int currentIndex = 0;
        while (!digitQueue.isQueueEmpty()) {
            char digit = digitQueue.serve();
            if (digit == '\0') {
                System.out.println("Error serving digit from queue.");
                return -1;
            }
            if (currentIndex != middleIndex) {
                resultStr.append(digit);
            }
            currentIndex++;
        }

        try {
            if (resultStr.length() == 0) {
                return 0;
            }
            return Integer.parseInt(resultStr.toString());
        } catch (NumberFormatException e) {
            System.out.println("Error parsing result string back to integer: " + e.getMessage());
            return -1;
        }
    }
}

/* ===== Test.java ===== */
package Q3;

public class Test {

    public static void main(String[] args) {
        int inputNumber = 12345;

        System.out.println("Input Number: " + inputNumber);

        int resultNumber = Functions.deleteMiddleDigit(inputNumber);

        if (resultNumber != -1) {
            System.out.println("Number after deleting middle digit: " + resultNumber);
        } else {
            System.out.println("Function execution failed.");
        }

        System.out.println("\n--- Testing with even digit number ---");
        int evenInput = 1234;
        System.out.println("Input Number: " + evenInput);
        int evenResult = Functions.deleteMiddleDigit(evenInput);
         if (evenResult != -1) {
            System.out.println("Number after deleting middle digit: " + evenResult);
        } else {
            System.out.println("Function execution failed.");
        }

        System.out.println("\n--- Testing with single digit number ---");
        int singleInput = 5;
        System.out.println("Input Number: " + singleInput);
        int singleResult = Functions.deleteMiddleDigit(singleInput);
         if (singleResult != -1) {
            System.out.println("Number after deleting middle digit: " + singleResult);
        } else {
            System.out.println("Function execution failed.");
        }

        System.out.println("\n--- Testing with zero ---");
        int zeroInput = 0;
        System.out.println("Input Number: " + zeroInput);
        int zeroResult = Functions.deleteMiddleDigit(zeroInput);
         if (zeroResult != -1) {
            System.out.println("Number after deleting middle digit: " + zeroResult);
        } else {
            System.out.println("Function execution failed.");
        }
    }
}
